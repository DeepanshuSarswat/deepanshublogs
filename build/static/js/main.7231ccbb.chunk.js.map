{"version":3,"sources":["Navbar.js","Bloglist.js","useFetch.js","Home.js","Createblog.js","BlogDetail.js","Notfound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Bloglist","props","blogs","map","blog","id","title","author","useFetch","url","useState","data","setdata","ispending","setpending","useEffect","setInterval","fetch","then","response","json","console","log","Home","Createblog","setTitle","body","setbody","setauthor","setispending","history","useHistory","onSubmit","event","preventDefault","blogobject","method","headers","JSON","stringify","push","type","required","onChange","valu","target","value","disabled","BlogDetail","useParams","onClick","Notfound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7231ccbb.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <nav className=\"nav\">\r\n        <h1>Deepanshu's Blog</h1>\r\n        <div className=\"links\">\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/create\">New Blog</Link>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Link } from \"react-router-dom\";\r\nconst Bloglist = (props) => {\r\n  let blogs = props.blogs;\r\n\r\n  return (\r\n    <div className=\"Bloglist\">\r\n      {blogs.map((blog) => {\r\n        return (\r\n          <div className=\"blog-preview\" key={blogs.id}>\r\n            <Link to={`/blogs/${blog.id}`}>\r\n              <h2>{blog.title}</h2>\r\n              <p>Written by {blog.author}</p>\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Bloglist;\r\n","import { useState, useEffect } from \"react\";\r\nconst useFetch = (url) => {\r\n  const [data, setdata] = useState(null);\r\n  const [ispending, setpending] = useState(true);\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setdata(data);\r\n          setpending(false);\r\n        });\r\n    }, 2000);\r\n    return () => console.log(\"Cleanup\");\r\n  }, [url]);\r\n  return { data, ispending };\r\n};\r\n\r\nexport default useFetch;\r\n","// import { useState, useEffect } from \"react\";\r\n\r\nimport Bloglist from \"./Bloglist\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const { data: blogs, ispending } = useFetch(\r\n    \"https://deepanshusarswatblog.netlify.app/blogs/\"\r\n  );\r\n  return (\r\n    <div className=\"home\">\r\n      {ispending && (\r\n        <div className=\"main\">\r\n          <div className=\"child\"> Loading...</div>\r\n          <div className=\"child1\">Loading... </div>\r\n        </div>\r\n      )}\r\n      {blogs && <Bloglist blogs={blogs} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Createblog = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setbody] = useState(\"\");\r\n  const [author, setauthor] = useState(\"Pinu\");\r\n  const [ispending, setispending] = useState(false);\r\n  const history = useHistory();\r\n  function titlechange(valu) {\r\n    setTitle(valu.target.value);\r\n  }\r\n  function bodychange(valu) {\r\n    setbody(valu.target.value);\r\n  }\r\n  function authorchange(valu) {\r\n    setauthor(valu.target.value);\r\n  }\r\n  function submitdata(event) {\r\n    event.preventDefault();\r\n\r\n    const blogobject = { title, body, author };\r\n    setispending(true);\r\n\r\n    fetch(\"https://deepanshusarswatblog.netlify.app/blogs/\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      body: JSON.stringify(blogobject),\r\n    }).then(() => {\r\n      console.log(\"New Blog Added\");\r\n      setispending(false);\r\n    });\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <div className=\"Createblog\">\r\n      <h2 className=\"Createblogh2\">Add A New Blog</h2>\r\n      <form onSubmit={submitdata}>\r\n        <label>Blog Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          onChange={titlechange}\r\n          value={title}\r\n        ></input>\r\n        <label>Blog Body:</label>\r\n        <textarea required onChange={bodychange} value={body}></textarea>\r\n        <label>Blog Author:</label>\r\n        <select value={author} onChange={authorchange}>\r\n          <option value=\"Deepanshu Sarswat\">Deepanshu Sarswat</option>\r\n          <option value=\"Pinu\">Pinu</option>\r\n        </select>\r\n        {!ispending && <button>Add Blog</button>}\r\n        {ispending && <button disabled>Adding Blog...</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Createblog;\r\n","import useFetch from \"./useFetch\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nconst BlogDetail = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const { data: blog, ispending } = useFetch(\r\n    \"https://deepanshusarswatblog.netlify.app/blogs/\" + id\r\n  );\r\n  function Deleteblogs() {\r\n    fetch(\"https://deepanshusarswatblog.netlify.app/blogs/\" + blog.id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"Blogdetail\">\r\n      {ispending && (\r\n        <div className=\"main\">\r\n          <div className=\"child\"> Loading...</div>\r\n          <div className=\"child1\">Loading... </div>\r\n        </div>\r\n      )}\r\n      {blog && (\r\n        <article>\r\n          <h2>{blog.title}</h2>\r\n          <p className=\"writter\">Written by {blog.author}</p>\r\n          <div className=\"body\">{blog.body}</div>\r\n          <button onClick={Deleteblogs}>Delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetail;\r\n","import { Link } from \"react-router-dom\";\r\nconst Notfound = () => {\r\n  return (\r\n    <div className=\"notfound\">\r\n      <h2>Sorry </h2>\r\n      <p>That page cannot be found</p>\r\n      <Link to=\"/\">Back to the Homepage</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notfound;\r\n","import Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport Createblog from \"./Createblog\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport BlogDetail from \"./BlogDetail\";\nimport Notfound from \"./Notfound\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Createblog />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetail />\n            </Route>\n            <Route path=\"*\">\n              <Notfound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}